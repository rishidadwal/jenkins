pipeline {
  agent any 
 environment {
        SONAR_SERVER = '52.87.158.57'
       SONAR_TOKEN  = credentials('SONAR_TOKEN')
    }
    stages {

    stage('Git-Clone') {
      steps {
        git url: 'git@github.com:rishidadwal/studentapp-ui-master.git'
  
      }
    }

    stage('Code-Quality') {
      steps {
       sh  'export MAVEN_HOME=/opt/maven'
        sh 'export PATH=$PATH:$MAVEN_HOME/bin'
        sh 'mvn clean compile'
      }
    }

    stage ('sonarqube'){
        steps{
             withSonarQubeEnv('SonarQube') {
           
            sh 'mvn sonar:sonar  -Dsonar.projectKey=upi  -Dsonar.host.url=http://34.205.63.4:9000   -Dsonar.login=172c3b0065a4742953f256c3f61240da89b4dce0'
            //sh 'mvn sonar:sonar   -Dsonar.projectKey=studentapp-ci  -Dsonar.host.url=http://${SONAR_SERVER}:9000   -Dsonar.login=${SONAR_TOKEN}'
          }
        
       }
    }
  
     stage("Quality Gate") {
            steps {
              timeout(time: 1, unit: 'HOURS') {
                waitForQualityGate abortPipeline: true
           }
        }
     }
     
      stage("Packaging"){
          steps{
              sh "mvn package"
          }
      }
     
      
       stage("Push to artifactory"){
          steps{
              sh "mvn deploy"
          }
      }

    }
     
      post {
          always{
              cleanWs()
          }
      }
  
}
